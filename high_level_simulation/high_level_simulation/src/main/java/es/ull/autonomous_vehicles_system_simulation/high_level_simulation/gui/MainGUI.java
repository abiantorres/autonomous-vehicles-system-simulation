/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.ull.autonomous_vehicles_system_simulation.high_level_simulation.gui;

import javax.swing.SwingUtilities;

import es.ull.autonomous_vehicles_system_simulation.high_level_simulation.bridge.ROSListener;

/**
 *
 * @author abiantorres
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parametersPanel = new javax.swing.JPanel();
        experimentsLabel = new javax.swing.JLabel();
        janitorsLabel = new javax.swing.JLabel();
        doctorsLabel = new javax.swing.JLabel();
        autonomousWheelchairsLabel = new javax.swing.JLabel();
        manualWheelchairsLabel = new javax.swing.JLabel();
        experimentsSpinner = new javax.swing.JSpinner();
        janitorsSpinner = new javax.swing.JSpinner();
        DoctorsSpinner = new javax.swing.JSpinner();
        aWheelchairsSpinner = new javax.swing.JSpinner();
        mWheelchairsSpinner = new javax.swing.JSpinner();
        patientsPerArrivalLabel = new javax.swing.JLabel();
        minutesBetweenArrivalsLabel = new javax.swing.JLabel();
        manualWheelchairsFactorLabel = new javax.swing.JLabel();
        simulationDaysLabel = new javax.swing.JLabel();
        simulationDaysSpinner = new javax.swing.JSpinner();
        manualWheelchairsFactorSpinner = new javax.swing.JSpinner();
        minutesBetweenArrivalSpinner = new javax.swing.JSpinner();
        patientsPerArrivalSpinner = new javax.swing.JSpinner();
        modePanel = new javax.swing.JPanel();
        listenerModeButton = new javax.swing.JButton();
        historicalModeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wheelchairs Simulation");

        parametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation Parameters"));

        experimentsLabel.setText("Experiments");

        janitorsLabel.setText("Janitors");

        doctorsLabel.setText("Doctors");

        autonomousWheelchairsLabel.setText("Autonomous Wheelchairs");

        manualWheelchairsLabel.setText(" Manual Wheelchairs");

        experimentsSpinner.setModel(new javax.swing.SpinnerNumberModel(100, 0, 10000, 500));

        janitorsSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 500, 25));

        DoctorsSpinner.setModel(new javax.swing.SpinnerNumberModel(2, 1, 500, 25));

        aWheelchairsSpinner.setModel(new javax.swing.SpinnerNumberModel(6, 0, 500, 25));

        mWheelchairsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 25));

        patientsPerArrivalLabel.setText("Patients per arrival");

        minutesBetweenArrivalsLabel.setText("Minutes between arrivals");

        manualWheelchairsFactorLabel.setText("Manual Wheelchairs Factor");

        simulationDaysLabel.setText("Simulation Days ");

        simulationDaysSpinner.setModel(new javax.swing.SpinnerNumberModel(7, 1, 1825, 100));

        manualWheelchairsFactorSpinner.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(1.0d), Double.valueOf(0.0d), Double.valueOf(100.0d), Double.valueOf(1.0d)));

        minutesBetweenArrivalSpinner.setModel(new javax.swing.SpinnerNumberModel(30, 1, 380, 30));

        patientsPerArrivalSpinner.setModel(new javax.swing.SpinnerNumberModel(4, 1, 500, 25));

        javax.swing.GroupLayout parametersPanelLayout = new javax.swing.GroupLayout(parametersPanel);
        parametersPanel.setLayout(parametersPanelLayout);
        parametersPanelLayout.setHorizontalGroup(
            parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(experimentsLabel)
                    .addComponent(janitorsLabel)
                    .addComponent(doctorsLabel)
                    .addComponent(autonomousWheelchairsLabel)
                    .addComponent(manualWheelchairsLabel))
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(janitorsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(experimentsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parametersPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mWheelchairsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aWheelchairsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientsPerArrivalLabel)
                    .addComponent(minutesBetweenArrivalsLabel)
                    .addComponent(manualWheelchairsFactorLabel)
                    .addComponent(simulationDaysLabel))
                .addGap(25, 25, 25)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientsPerArrivalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minutesBetweenArrivalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manualWheelchairsFactorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simulationDaysSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        parametersPanelLayout.setVerticalGroup(
            parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientsPerArrivalLabel)
                            .addComponent(patientsPerArrivalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minutesBetweenArrivalsLabel)
                            .addComponent(minutesBetweenArrivalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(manualWheelchairsFactorLabel)
                            .addComponent(manualWheelchairsFactorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(simulationDaysLabel)
                            .addComponent(simulationDaysSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(experimentsLabel)
                            .addComponent(experimentsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(janitorsLabel)
                            .addComponent(janitorsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorsLabel)
                            .addComponent(DoctorsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autonomousWheelchairsLabel)
                            .addComponent(aWheelchairsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(manualWheelchairsLabel)
                            .addComponent(mWheelchairsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        modePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mode"));

        listenerModeButton.setText("Listener Mode");
        listenerModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listenerModeButtonActionPerformed(evt);
            }
        });
        
        historicalModeButton.setText("Historical Mode");
        historicalModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historicalModeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modePanelLayout = new javax.swing.GroupLayout(modePanel);
        modePanel.setLayout(modePanelLayout);
        modePanelLayout.setHorizontalGroup(
            modePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modePanelLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(listenerModeButton)
                .addGap(18, 18, 18)
                .addComponent(historicalModeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        modePanelLayout.setVerticalGroup(
            modePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modePanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(modePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listenerModeButton)
                    .addComponent(historicalModeButton))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listenerModeButtonActionPerformed(java.awt.event.ActionEvent evt) { 
    	this.nExperiments = (Integer) this.experimentsSpinner.getValue();
    	this.nJanitors = (Integer) this.janitorsSpinner.getValue();
    	this.nDoctors = (Integer) this.DoctorsSpinner.getValue();
    	this.nAutoChairs = (Integer) this.aWheelchairsSpinner.getValue();
    	this.nManualChairs = (Integer) this.mWheelchairsSpinner.getValue();
    	this.patientsPerArrival = (Integer) this.patientsPerArrivalSpinner.getValue();
    	this.minutesBetweenArrivals = (Integer) this.minutesBetweenArrivalSpinner.getValue();
    	this.manualFactor = (Double) this.manualWheelchairsFactorSpinner.getValue();
    	this.days = (Integer) this.simulationDaysSpinner.getValue();
    	 Thread t = new Thread(new Runnable() {
    	    public void run() {
    	    	new ROSListener().listen(nExperiments, nJanitors, nDoctors, nAutoChairs, nManualChairs, 
		        	patientsPerArrival, minutesBetweenArrivals, manualFactor, days);
    	    }
    	 });
    	 t.start();
    }  

    
    private void historicalModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historicalModeButtonActionPerformed
    	new HistoricalModeGUI(this).setVisible(true);
    }//GEN-LAST:event_historicalModeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JSpinner DoctorsSpinner;
    javax.swing.JSpinner aWheelchairsSpinner;
    private javax.swing.JLabel autonomousWheelchairsLabel;
    private javax.swing.JLabel doctorsLabel;
    private javax.swing.JLabel experimentsLabel;
    javax.swing.JSpinner experimentsSpinner;
    private javax.swing.JButton historicalModeButton;
    private javax.swing.JLabel janitorsLabel;
    javax.swing.JSpinner janitorsSpinner;
    private javax.swing.JButton listenerModeButton;
    javax.swing.JSpinner mWheelchairsSpinner;
    private javax.swing.JLabel manualWheelchairsFactorLabel;
    javax.swing.JSpinner manualWheelchairsFactorSpinner;
    private javax.swing.JLabel manualWheelchairsLabel;
    javax.swing.JSpinner minutesBetweenArrivalSpinner;
    private javax.swing.JLabel minutesBetweenArrivalsLabel;
    private javax.swing.JPanel modePanel;
    private javax.swing.JPanel parametersPanel;
    private javax.swing.JLabel patientsPerArrivalLabel;
    javax.swing.JSpinner patientsPerArrivalSpinner;
    private javax.swing.JLabel simulationDaysLabel;
    javax.swing.JSpinner simulationDaysSpinner;
    // End of variables declaration//GEN-END:variables
    
    private Integer nExperiments, nJanitors, nDoctors, nAutoChairs, nManualChairs, 
	patientsPerArrival, minutesBetweenArrivals, days; 
    private Double manualFactor;
}
